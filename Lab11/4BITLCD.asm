;4-BIT LCD Implementation

ORG 00H
LJMP MAIN

RS	EQU	P1.3
E	EQU	P1.2

MYDATA: DB "asdf"

DELAY:		MOV R2,#20
REP:		DJNZ R2, REP
RET

CMDWRITE4:	CLR RS
			MOV C,ACC.4
			MOV P1.4,C
			MOV C,ACC.5
			MOV P1.5,C
			MOV C,ACC.6
			MOV P1.6,C
			MOV C,ACC.7
			MOV P1.7,C
			SETB E
			NOP
			NOP
			CLR E
		RET

DATAWRITE:	SETB RS
			MOV C, ACC.7
			MOV P1.7, C	
			MOV C, ACC.6
			MOV P1.6, C	
			MOV C, ACC.5
			MOV P1.5, C	
			MOV C, ACC.4
			MOV P1.4, C

			SETB E
			NOP
			NOP
			CLR E

			MOV C, ACC.3	
			MOV P1.7, C	
			MOV C, ACC.2	
			MOV P1.6, C	
			MOV C, ACC.1	
			MOV P1.5, C	
			MOV C, ACC.0	
			MOV P1.4, C	

			SETB E
			NOP
			NOP
			CLR E	
		RET
ORG 300H
MAIN:

MOV A,#20H
ACALL CMDWRITE4
ACALL DELAY

MOV A,#28H
ACALL CMDWRITE4
SWAP A
ACALL CMDWRITE4
ACALL DELAY

MOV A,#0EH
ACALL CMDWRITE4
SWAP A
ACALL CMDWRITE4
ACALL DELAY

MOV A,#01H
ACALL CMDWRITE4
SWAP A
ACALL CMDWRITE4
MOV R7,#35
UPP:	ACALL DELAY
		DJNZ R7,UPP


MOV A,#06H
ACALL CMDWRITE4
SWAP A
ACALL CMDWRITE4
ACALL DELAY


MOV A,#80H
ACALL CMDWRITE4
SWAP A
ACALL CMDWRITE4
ACALL DELAY

MOV DPTR,#MYDATA
UP1:	CLR A
		MOVC A,@A+DPTR
		ACALL DATAWRITE
		ACALL DELAY
		INC DPTR
		SJMP UP1
END
